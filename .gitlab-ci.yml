image: node:latest

stages:
  - fetch
  - build
  - test
  - deploy

default:
  before_script:
    - . /root/.profile
    - npm config set @candlelib:registry https://$GITLAB_HOST:9443/api/v4/projects/3/packages/npm/
    - npm config set -- //$GITLAB_HOST:9443/api/v4/projects/3/packages/npm/:_authToken ${NPM_DEPLOY_TOKEN}
    - export NODE_EXTRA_CA_CERTS=${GITLAB_PUBLIC_CRT}
    - npm install -g yarn

# cache:
#   paths:
#     - node_modules/
#     - packages/core/hc_ts_common/build/
#     - packages/core/hc_asytrip/build/
#     - packages/core/hc_bytecode/build/
#     - packages/core/hc_grammar/build/
#     - packages/core/hc_root/build/
#     - packages/core/hc_tools/build/
#     - packages/rt_typescript/build/
#     - packages/**/publish.bounty
#     - packages/**/package.json

fetch_dependencies:
  stage: fetch
  script:
    - npm install --no-audit

  rules:
    - if: $CI_COMMIT_REF_NAME != "gitlab-ci"
      when: never
    - when: always

  artifacts:
    expire_in: 15 min
    paths:
      - node_modules/

# BUILD ----------------------------------------------------------------------

build_typescript_packages:
  stage: build

  rules:
    - if: $CI_COMMIT_REF_NAME != "gitlab-ci"
      when: never
    - when: always

  script:
    - npm install typescript
    - npx tsc -p ./packages/core/hc_ts_common/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_asytrip/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_bytecode/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_grammar/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_root/tsconfig.json || true
    - npx tsc -p ./packages/core/hc_tools/tsconfig.json || true
    - npx tsc -p ./packages/rt_typescript/tsconfig.json || true

  artifacts:
    expire_in: 2 hours
    paths:
      - packages/core/hc_ts_common/build/
      - packages/core/hc_asytrip/build/
      - packages/core/hc_bytecode/build/
      - packages/core/hc_grammar/build/
      - packages/core/hc_root/build/
      - packages/core/hc_tools/build/
      - packages/rt_typescript/build/

  dependencies:
    - fetch_dependencies

# TEST & VERSION -----------------------------------------------------------

version_ts_modules:
  stage: test

  variables:
    GIT_STRATEGY: clone

  rules:
    - if: $CI_COMMIT_REF_NAME != "gitlab-ci"
      when: never
    - when: always

  before_script:
    - TOKENED_REPO=http://git:$GITLAB_ACCESS_TOKEN@$GITLAB_HOST:$GITLAB_HTTP_PORT/$GITLAB_REPO_PATH
    - git remote add gitlab $TOKENED_REPO || git remote set-url gitlab $TOKENED_REPO
    - git config --global user.email "hydrocarbon-authors@null.io"
    - git config --global user.name "Gitlab Runner"
    - git fetch --all
    - npm config set registry http://$NPM_REGISTRY

  script:
    - npm run version_ts_packages

  after_script:
    - git checkout $STAGED_VERSION_BRANCH
    - git branch -u gitlab/$STAGED_VERSION_BRANCH
    - git push

  artifacts:
    paths:
      - "./*.bounty"
      - packages/**/*.bounty
      - packages/**/*.temp.json

  dependencies:
    - fetch_dependencies
    - build_typescript_packages

# DEPLOY ------------------------------------------------------------------

publish_ts_packages:
  stage: deploy

  before_script:
    - echo '//${NPM_REGISTRY}/:_authToken=${NPM_TOKEN}'> ~/.npmrc

  rules:
    - if: $CI_COMMIT_REF_NAME != "gitlab-ci"
      when: never
    - when: always

  script:
    - npm config set registry http://$NPM_REGISTRY
    - ./root.publish.bounty

  dependencies:
    - version_ts_modules
    - fetch_dependencies
    - build_typescript_packages

deploy_to_gitlab_branch:
  stage: deploy

  rules:
    - if: $CI_COMMIT_REF_NAME != "gitlab-ci"
      when: never
    - when: always

  variables:
    GIT_STRATEGY: clone

  before_script:
    - TOKENED_REPO=http://git:$GITLAB_ACCESS_TOKEN@$GITLAB_HOST:$GITLAB_HTTP_PORT/$GITLAB_REPO_PATH
    - git remote add gitlab $TOKENED_REPO || git remote set-url gitlab $TOKENED_REPO
    - git config --global user.email "hydrocarbon-authors@null.io"
    - git config --global user.name "Gitlab Runner"
    - git fetch --all
    - git checkout --track  gitlab/$STAGED_VERSION_BRANCH

  script:
    - ./root.commit.bounty
    - git push -f gitlab HEAD:$STAGED_VERSION_BRANCH

  dependencies:
    - version_ts_modules
    - fetch_dependencies
    - build_typescript_packages

publish_ts_packages_npm:
  stage: deploy

  rules:
    - if: $CI_COMMIT_REF_NAME == "release"
      when: always
    - when: never

  before_script:
    - echo '//${PUBLIC_NPM_REGISTRY}/:_authToken=${PUBLIC_NPM_TOKEN}'> ~/.npmrc

  script:
    - npm publish --access public ./packages/core/hc_ts_common/ || true
    - npm publish --access public ./packages/core/hc_asytrip/ || true
    - npm publish --access public ./packages/core/hc_bytecode/ || true
    - npm publish --access public ./packages/core/hc_grammar/ || true
    - npm publish --access public ./packages/core/hc_root/ || true
    - npm publish --access public ./packages/core/hc_tools/ || true
    - npm publish --access public ./packages/rt_typescript/ || true
# reference https://docs.gitlab.com/ee/ci/yaml/

